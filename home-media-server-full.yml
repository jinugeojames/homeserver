name: home-media-server

networks:
  media-network:

services:
  #   Wireguard Peer
  #   WGClientNode:
  #     image: ghcr.io/digitallyrefined/docker-wireguard-tunnel:v3
  #     container_name: wg-peer1
  #     environment:
  #       - PUID=1000
  #       - PGID=1000
  #       - TZ=Asia/Kolkata
  #       # Note that DOMAIN & PEERS are not required for the peer
  #       # Services to expose format (comma-separated)
  #       # SERVICES=peer-id:peer-container-name:peer-container-port:expose-port-as
  #       - SERVICES=peer1:jellyfin:8096:8096,peer1:homarr:7575:7575,peer1:gluetun
  #     cap_add:
  #       - NET_ADMIN
  #     volumes:
  #       - ${APPDATA_PATH}/wireguard:/etc/wireguard
  #     labels:
  #       - "com.centurylinklabs.watchtower.enable=true"
  #     deploy:
  #       restart_policy:
  #         condition: unless-stopped
  #     networks:
  #       media-network
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      media-network:
    deploy:
      restart_policy:
        condition: unless-stopped

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - 3000:3000
    volumes:
      - ${APPDATA_PATH}/homepage/config:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      media-network:
    deploy:
      restart_policy:
        condition: unless-stopped
  it-tools:
    image: corentinth/it-tools:latest
    container_name: "it-tools"
    restart: unless-stopped
    ports:
      - 8300:80
  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    environment:
      - PUID=1000
      - PGID=1000
      - DUPLICATI__WEBSERVICE_PASSWORD=${PASSWORD}
      - TZ=Asia/Kolkatta
    volumes:
      - ${APPDATA_PATH}/duplicati/config:/config
      - /home/jinugeo/backups:/backups
      - /home/jinugeo:/source
    ports:
      - 8200:8200
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      media-network:
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 60s

  # postgres:
  #   image: postgres
  #   container_name: postgres
  #   restart: alw${USERNAME}ays
  #   # set shared memory limit when using docker-compose
  #   shm_size: 128mb
  #   # or set shared memory limit when deploy via swarm stack
  #   volumes:
  #     - type: tmpfs
  #       target: ${APPDATA_PATH}/postgres
  #       tmpfs:
  #         size: 536870912 # 512*2^20 bytes = 512Mb
  #   environment:
  #     - POSTGRES_USER=${USERNAME}
  #     - POSTGRES_PASSWORD=${PASSWORD}
  #     - POSTGRES_DB=postgres
  #   ports:
  #     - 5432:5432
  #   networks:
  #     media-network:
  #   deploy:
  #     restart_policy:
  #       condition: unless-stopped

  # nextcloud:
  #   image: lscr.io/linuxserver/nextcloud:latest
  #   container_name: nextcloud
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Asia/Kolkata
  #   volumes:
  #     - ${APPDATA_PATH}/nextcloud/config:/config
  #   ports:
  #     - 1337:80
  #   networks:
  #     media-network:
  #   deploy:
  #     restart_policy:
  #       condition: unless-stopped

  filezilla:
    image: lscr.io/linuxserver/filezilla:latest
    container_name: filezilla
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ${APPDATA_PATH}/filezilla/config:/config
      - ${MEDIA_PATH}:/media
    ports:
      - 7000:3000
      - 7001:3001
    restart: unless-stopped

  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /:/srv
      - ${APPDATA_PATH}/filebrowser/config/filebrowser.db:/database/filebrowser.db
      - ${APPDATA_PATH}/filebrowser/config/settings.json:/settings.json
    ports:
      - 8081:8081
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      media-network:
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 50s

  webtop:
    image: lscr.io/linuxserver/webtop:debian-kde
    container_name: webtop
    security_opt:
      - seccomp:unconfined #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - CUSTOM_USER=${USERNAME}
      - PASSWORD=${PASSWORD}
      - SUBFOLDER=/ #optional
      - TITLE=Webtop #optional
    volumes:
      - ${APPDATA_PATH}/webtop/config:/config
      - ${MEDIA_PATH}:/media
    ports:
      - 4000:3000
      - 4001:3001
    devices:
      - /dev/dri:/dev/dri #optional
    shm_size: "2gb" #optional
    networks:
      media-network:
    restart: unless-stopped

  # Jellyfin
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    devices:
      - /dev/dri:/dev/dri
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - TZ=Asia/Kolkata
    volumes:
      - ${APPDATA_PATH}/jellyfin/config:/config
      - ${MEDIA_PATH}/movies:/data/movies
      - ${MEDIA_PATH}/tv-shows:/data/tvshows
      - ${MEDIA_PATH}/music:/data/music
    ports:
      - 8096:8096
    group_add:
      - "109"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      media-network:
        #ipv4_address: 172.10.0.3
    deploy:
      restart_policy:
        condition: unless-stopped

  # Jellyseerr
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=Asia/Kolkata
    ports:
      - 5055:5055
    volumes:
      - ${APPDATA_PATH}/jellyseerr:/app/config
    networks:
      media-network:
    depends_on:
      sonarr:
        condition: service_started
      radarr:
        condition: service_started
      jellyfin:
        condition: service_started
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 10s

  #VPN
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    volumes:
      - ${APPDATA_PATH}/gluetun:/gluetun
      - ${APPDATA_PATH}/gluetun/wireguard/wg0.conf:/gluetun/wireguard/wg0.conf
    environment:
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
      - WIREGUARD_ENDPOINT_IP=${WIREGUARD_ENDPOINT_IP}
      - WIREGUARD_ENDPOINT_PORT=${WIREGUARD_ENDPOINT_PORT}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
    networks:
      media-network:
    ports:
      - 8000:8000
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      # Lazylibrary
      - 5299:5299
      # Whisparr
      - 6969:6969
      # Readarr
      - 8787:8787
      # Lidarr
      - 8686:8686
      # Bazarr
      - 6767:6767
      # Sonarr
      - 8989:8989
      # Radarr
      - 7878:7878
      # Prowlarr
      - 9696:9696
      # Qbit
      - 8092:8092
      - 6882:6882
      - 6882:6882/udp
      # Transmission
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
      #nzbget
      - 6789:6789
      #Deluge
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
      - 58846:58846 #optional
    deploy:
      restart_policy:
        condition: unless-stopped

  #Readarr
  readarr:
     container_name: readarr
     image: ghcr.io/hotio/readarr
     environment:
       - PUID=1000
       - PGID=1000
       - UMASK=002
       - TZ=Asia/Kolkata
     volumes:
       - ${APPDATA_PATH}/readarr/config:/config
       - ${MEDIA_PATH}:/media
     labels:
       - "com.centurylinklabs.watchtower.enable=true"
     depends_on:
       prowlarr:
         condition: service_started
     network_mode: "service:gluetun"
     deploy:
       restart_policy:
         condition: unless-stopped
         delay: 7s

  #Bazarr
  bazarr:
     image: lscr.io/linuxserver/bazarr:latest
     container_name: bazarr
     environment:
       - PUID=1000
       - PGID=1000
       - TZ=Asia/Kolkata
     volumes:
       - ${APPDATA_PATH}/bazarr/:/config
       - ${MEDIA_PATH}:/media
     labels:
       - "com.centurylinklabs.watchtower.enable=true"
     network_mode: "service:gluetun"
     depends_on:
       prowlarr:
         condition: service_started
     deploy:
       restart_policy:
         condition: unless-stopped
         delay: 7s

  #Lidarr
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ${APPDATA_PATH}/lidarr/config:/config
      - ${MEDIA_PATH}:/media
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      prowlarr:
        condition: service_started
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 9s

  #Sonarr
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - TZ=Asia/Kolkata
    volumes:
      - ${APPDATA_PATH}/sonarr/config:/config
      - ${MEDIA_PATH}:/media
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      prowlarr:
        condition: service_started
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 10s

  #Radarr
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - TZ=Asia/Kolkata
    volumes:
      - ${APPDATA_PATH}/radarr:/config
      - ${MEDIA_PATH}:/media
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      prowlarr:
        condition: service_started
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 11s
  #Prowlarr
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - TZ=Asia/Kolkata
    volumes:
      - ${APPDATA_PATH}/prowlarr/config:/config
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Asia/Kolkata
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: unless-stopped

  # Torrent - Qbit
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - WEBUI_PORT=8092
      - TORRENTING_PORT=6882
    volumes:
      - ${APPDATA_PATH}/qbittorrent/config:/config
      - ${MEDIA_PATH}/downloads:/media/downloads
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: unless-stopped

  #Transmisssion
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      #- TRANSMISSION_WEB_HOME= #optional
      - USER=${USERNAME}
      - PASS=${PASSWORD}
      #- WHITELIST= #optional
      #- PEERPORT= #optional
      #- HOST_WHITELIST= #optional
    volumes:
      - ${APPDATA_PATH}/transmission/config:/config
      - ${MEDIA_PATH}/downloads:/media/downloads
      - ${MEDIA_PATH}/watch:/media/watch
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 15s

  #NZBGet
  nzbget:
     image: lscr.io/linuxserver/nzbget:latest
     container_name: nzbget
     environment:
       - PUID=1000
       - PGID=1000
       - TZ=Asia/Kolkata
     volumes:
       - ${APPDATA_PATH}/nzbget/config:/config
       - ${MEDIA_PATH}/downloads:/media/downloads #optional
     labels:
       - "com.centurylinklabs.watchtower.enable=true"
     network_mode: "service:gluetun"
     depends_on:
       gluetun:
         condition: service_healthy
     deploy:
       restart_policy:
         condition: unless-stopped
         delay: 25s

  #Deluge
  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - ${APPDATA_PATH}/nzbget/config:/config
      - ${MEDIA_PATH}/downloads:/media/downloads #optional
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 15s

  #Watchtower
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    networks:
      media-network:
    environment:
      - TZ=Asia/Kolkata
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_SCHEDULE= 0 0 * * *
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 30s