name: home-media-server

networks:
  media-network:

services:
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      media-network:
    deploy:
      restart_policy:
        condition: unless-stopped

  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /:/srv
      - ${APPDATA_PATH}/filebrowser/config/filebrowser.db:/database/filebrowser.db
      - ${APPDATA_PATH}/filebrowser/config/settings.json:/settings.json
    ports:
      - 8081:8081
    security_opt:
      - no-new-privileges:true
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      media-network:
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 50s


  #VPN
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    volumes:
      - ${APPDATA_PATH}/gluetun:/gluetun
      - ${APPDATA_PATH}/gluetun/wireguard/wg0.conf:/gluetun/wireguard/wg0.conf
    environment:
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
      - VPN_ENDPOINT_IP=${VPN_ENDPOINT_IP}
      - VPN_ENDPOINT_PORT=${VPN_ENDPOINT_PORT}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
    networks:
      media-network:
    ports:
      - 8000:8000
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      # Lazylibrary
      - 5299:5299
      # Whisparr
      - 6969:6969
      # Readarr
      - 8787:8787
      # Lidarr
      - 8686:8686
      # Bazarr
      - 6767:6767
      # Sonarr
      - 8989:8989
      # Radarr
      - 7878:7878
      # Prowlarr
      - 9696:9696
      # Qbit
      - 8092:8092
      - 6882:6882
      - 6882:6882/udp
      # Transmission
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
      #nzbget
      - 6789:6789
      #Deluge
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
      - 58846:58846 #optional
    deploy:
      restart_policy:
        condition: unless-stopped
  #Bazarr
  bazarr:
     image: lscr.io/linuxserver/bazarr:latest
     container_name: bazarr
     environment:
       - PUID=1000
       - PGID=1000
       - TZ=Asia/Kolkata
     volumes:
       - ${APPDATA_PATH}/bazarr/:/config
       - ${MEDIA_PATH}:/media
     labels:
       - "com.centurylinklabs.watchtower.enable=true"
     network_mode: "service:gluetun"
     depends_on:
       prowlarr:
         condition: service_started
     deploy:
       restart_policy:
         condition: unless-stopped
         delay: 7s

  #Lidarr
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
    volumes:
      - ${APPDATA_PATH}/lidarr/config:/config
      - ${MEDIA_PATH}:/media
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      prowlarr:
        condition: service_started
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 9s

  #Sonarr
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - TZ=Asia/Kolkata
    volumes:
      - ${APPDATA_PATH}/sonarr/config:/config
      - ${MEDIA_PATH}:/media
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      prowlarr:
        condition: service_started
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 10s

  #Radarr
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - TZ=Asia/Kolkata
    volumes:
      - ${APPDATA_PATH}/radarr:/config
      - ${MEDIA_PATH}:/media
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      prowlarr:
        condition: service_started
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 11s
  #Prowlarr
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=022
      - TZ=Asia/Kolkata
    volumes:
      - ${APPDATA_PATH}/prowlarr/config:/config
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Asia/Kolkata
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: unless-stopped

  #Deluge
  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - ${APPDATA_PATH}/nzbget/config:/config
      - ${MEDIA_PATH}/downloads:/media/downloads #optional
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 15s

  #Watchtower
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json
    networks:
      media-network:  #Transmisssion
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      #- TRANSMISSION_WEB_HOME= #optional
      - USER=${USERNAME}
      - PASS=${PASSWORD}
      #- WHITELIST= #optional
      #- PEERPORT= #optional
      #- HOST_WHITELIST= #optional
    volumes:
      - ${APPDATA_PATH}/transmission/config:/config
      - ${MEDIA_PATH}/downloads:/media/downloads
      - ${MEDIA_PATH}/watch:/media/watch
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    network_mode: "service:gluetun"
    depends_on:
      gluetun:
        condition: service_healthy
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 15s

  #NZBGet
  nzbget:
     image: lscr.io/linuxserver/nzbget:latest
     container_name: nzbget
     environment:
       - PUID=1000
       - PGID=1000
       - TZ=Asia/Kolkata
     volumes:
       - ${APPDATA_PATH}/nzbget/config:/config
       - ${MEDIA_PATH}/downloads:/media/downloads #optional
     labels:
       - "com.centurylinklabs.watchtower.enable=true"
     network_mode: "service:gluetun"
     depends_on:
       gluetun:
         condition: service_healthy
     deploy:
       restart_policy:
         condition: unless-stopped
         delay: 25s

    environment:
      - TZ=Asia/Kolkata
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_SCHEDULE= 0 0 * * *
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    deploy:
      restart_policy:
        condition: unless-stopped
        delay: 30s