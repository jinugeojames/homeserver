name: home-server

networks:
  home-server:
    name: home-server
    driver: bridge
    ipam:
      config:
        - subnet: 50.0.0.0/24
services:
  # Cloudflare Tunnel
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    networks:
      home-server:
        ipv4_address: 50.0.0.2
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    deploy:
      restart_policy:
        condition: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
  nginx-proxy-manager:
    container_name: nginx-proxy-manager
    image: "jc21/nginx-proxy-manager:latest"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "81:81"

    volumes:
      - ./APPDATA/nginx-proxy-manager/data:/data
      - ./APPDATA/nginx-proxy-manager/letsencrypt:/etc/letsencrypt
    networks:
      home-server:
        ipv4_address: 50.0.0.3
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    deploy:
      restart_policy:
        condition: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
  #VPN
  # WireGuard
  wireguard-client:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard-client
    cap_add:
      - NET_ADMIN
      - SYS_MODULE # optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - LOG_CONFS=true # optional
    ports:
      - 51820:51820/udp
      # Lazylibrary
      - 5299:5299
      # Whisparr
      - 6969:6969
      # Readarr
      - 8787:8787
      # Lidarr
      - 8686:8686
      # Bazarr
      - 6767:6767
      # Sonarr
      - 8989:8989
      # Radarr
      - 7878:7878
      # Prowlarr
      - 9696:9696
      # Qbit
      - 8092:8092
      - 6882:6882
      - 6882:6882/udp
      # Transmission
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
      #nzbget
      - 6789:6789
      #Deluge
      - 8112:8112
      - 6881:6881
      - 6881:6881/udp
      - 58846:58846 #optional
    volumes:
      - ../APPDATA/wireguard/config:/config
      - /lib/modules:/lib/modules # optional
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    networks:
      home-server:
        ipv4_address: 50.0.0.4
    deploy:
      restart_policy:
        condition: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
  # gluetun:
  #   image: qmcgaw/gluetun
  #   container_name: gluetun
  #   cap_add:
  #     - NET_ADMIN
  #   devices:
  #     - /dev/net/tun:/dev/net/tun
  #   volumes:
  #     - ../APPDATA/gluetun:/gluetun
  #     - ../APPDATA/gluetun/wireguard/wg0.conf:/gluetun/wireguard/wg0.conf
  #   environment:
  #     - VPN_SERVICE_PROVIDER=custom
  #     - VPN_TYPE=wireguard
  #     - WIREGUARD_ENDPOINT_IP=${WIREGUARD_ENDPOINT_IP}
  #     - WIREGUARD_ENDPOINT_PORT=${WIREGUARD_ENDPOINT_PORT}
  #     - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
  #     - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
  #     - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
  #   networks:
  #     home-server:
  #       ipv4_address: 50.0.0.3
  #   ports:
  #     - 8000:8000
  #     - 8888:8888/tcp # HTTP proxy
  #     - 8388:8388/tcp # Shadowsocks
  #     - 8388:8388/udp # Shadowsocks
  #     # Lazylibrary
  #     - 5299:5299
  #     # Whisparr
  #     - 6969:6969
  #     # Readarr
  #     - 8787:8787
  #     # Lidarr
  #     - 8686:8686
  #     # Bazarr
  #     - 6767:6767
  #     # Sonarr
  #     - 8989:8989
  #     # Radarr
  #     - 7878:7878
  #     # Prowlarr
  #     - 9696:9696
  #     # Qbit
  #     - 8092:8092
  #     - 6882:6882
  #     - 6882:6882/udp
  #     # Transmission
  #     - 9091:9091
  #     - 51413:51413
  #     - 51413:51413/udp
  #     #nzbget
  #     - 6789:6789
  #     #Deluge
  #     - 8112:8112
  #     - 6881:6881
  #     - 6881:6881/udp
  #     - 58846:58846 #optional
  #   deploy:
  #     restart_policy:
  #       condition: unless-stopped
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "20m"
  #       max-file: "10"
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      # DNS Ports
      - "53:53/tcp"
      - "53:53/udp"
      # Default HTTP Port
      - "82:80/tcp"
      # Default HTTPs Port. FTL will generate a self-signed certificate
      # - "443:443/tcp"
      # Uncomment the below if using Pi-hole as your DHCP Server
      #- "67:67/udp"
      # Uncomment the line below if you are using Pi-hole as your NTP server
      #- "123:123/udp"
    environment:
      # Set the appropriate timezone for your location from
      # https://en.wikipedia.org/wiki/List_of_tz_database_time_zones, e.g:
      TZ: "Asia/Kolkata"
      # Set a password to access the web interface. Not setting one will result in a random password being assigned
      FTLCONF_webserver_api_password: ${PASSWORD}
      # If using Docker's default `bridge` network setting the dns listening mode should be set to 'all'
      FTLCONF_dns_listeningMode: "all"
      PIHOLE_DNS_: '50.0.0.6#5053'
    # Volumes store your data between container upgrades
    volumes:
      # For persisting Pi-hole's databases and common configuration file
      - "./APPDATA/pihole:/etc/pihole"
      # Uncomment the below if you have custom dnsmasq config files that you want to persist. Not needed for most starting fresh with Pi-hole v6. If you're upgrading from v5 you and have used this directory before, you should keep it enabled for the first v6 container start to allow for a complete migration. It can be removed afterwards. Needs environment variable FTLCONF_misc_etc_dnsmasq_d: 'true'
      #- './etc-dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      # See https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
      # Required if you are using Pi-hole as your DHCP server, else not needed
      - NET_ADMIN
      # Required if you are using Pi-hole as your NTP client to be able to set the host's system time
      - SYS_TIME
      # Optional, if Pi-hole should get some more processing time
      - SYS_NICE
    restart: unless-stopped
    networks:
      home-server:
        ipv4_address: 50.0.0.5
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    deploy:
      restart_policy:
        condition: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"

  unbound:
    container_name: unbound
    image: mvance/unbound:latest # remember to change this if you're using rpi
    networks:
      dns_net:
        ipv4_address: 50.0.0.6
    volumes:
      - /home/ubuntu/docker/unbound:/opt/unbound/etc/unbound
    ports:
      - "5053:53/tcp"
      - "5053:53/udp"
    healthcheck:
      test: ["NONE"]
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    deploy:
      restart_policy:
        condition: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"